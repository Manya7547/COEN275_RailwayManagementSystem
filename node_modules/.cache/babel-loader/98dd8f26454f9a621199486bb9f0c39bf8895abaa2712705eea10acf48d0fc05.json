{"ast":null,"code":"var _jsxFileName = \"/Users/dhruv590/Projects/flight-reservation-system-main/src/modules/booking/payment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { Button } from \"@material-ui/core\";\nimport CustomAlert from '../../components/custom-alert';\nimport { useUserInfoSession } from \"../../components/header/user-context\";\nimport SeatBookingServices from \"../../services/seat-booking-services\";\nimport './payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst seatPrice = Math.floor(Math.random() * 101);\nfunction Payment() {\n  _s();\n  const history = useHistory();\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [cvv, setCVV] = useState('');\n  const [name, setName] = useState('');\n  const [cardNumberError, setCardNumberError] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [cvvError, setCVVError] = useState('');\n  const [expiryError, setExpiryError] = useState('');\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  const [paymentError, setPaymentError] = useState(false);\n  const {\n    userInfoSession,\n    appendToUserInfoSession\n  } = useUserInfoSession();\n  const basePrice = userInfoSession.amountToBePaid;\n  const totalAmount = basePrice + seatPrice;\n  // const location = useLocation();\n\n  const handlePayment = async event => {\n    event.preventDefault();\n    const cardNumberPattern = /^\\d{16}$/;\n    const namePattern = /^[A-Za-z\\s]+$/;\n    const cvvPattern = /^\\d{3}$/;\n    const expiryPattern = /^(0[1-9]|1[0-2])\\/\\d{2}$/;\n    const sanitizedCardNumber = cardNumber.replace(/\\s/g, '');\n    let cardNumberError = '';\n    if (!cardNumberPattern.test(sanitizedCardNumber)) {\n      cardNumberError = 'Invalid card number';\n    }\n    let nameError = '';\n    if (!namePattern.test(name)) {\n      nameError = 'Invalid name';\n    }\n    let cvvError = '';\n    if (!cvvPattern.test(cvv)) {\n      cvvError = 'Invalid CVV';\n    }\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear() % 100;\n    const currentMonth = currentDate.getMonth() + 1;\n    const [inputMonth, inputYear] = expiry.split('/');\n    let expiryError = '';\n    if (!expiryPattern.test(expiry)) {\n      expiryError = 'Invalid expiry date (MM/YY)';\n    } else if (inputYear < currentYear || inputYear === currentYear && inputMonth < currentMonth) {\n      expiryError = 'Expiry date must be in the future';\n    }\n    setCardNumberError(cardNumberError);\n    setNameError(nameError);\n    setCVVError(cvvError);\n    setExpiryError(expiryError);\n    if (cardNumberError || nameError || cvvError || expiryError) {\n      setPaymentSuccess(false);\n      return false;\n    }\n    const getClassFromSeatNumber = seatNumber => {\n      if (seatNumber && seatNumber.startsWith) {\n        // Check if seatNumber is defined and has a startsWith method\n        if (seatNumber.startsWith('F')) {\n          return 'First Class';\n        } else if (seatNumber.startsWith('B')) {\n          return 'Business Class';\n        } else if (seatNumber.startsWith('E')) {\n          return 'Economy Class';\n        }\n      }\n      return 'Unknown Class';\n    };\n    const fetchReservationResponse = async () => {\n      const reservationResponse = await SeatBookingServices.createReservation(userInfoSession.selectedFlightNumber, userInfoSession.userId, userInfoSession.selectedSeat, userInfoSession.amountToBePaid);\n      console.log('Seat reservation info from Backend: ', reservationResponse);\n      if (reservationResponse.bookingId) {\n        setPaymentSuccess(true);\n      } else {\n        setPaymentError(true);\n      }\n    };\n    fetchReservationResponse();\n    appendToUserInfoSession({\n      seatPrice: seatPrice\n    });\n  };\n  const getClassFromSeatNumber = seatNumber => {\n    if (seatNumber && seatNumber.startsWith) {\n      // Check if seatNumber is defined and has a startsWith method\n      if (seatNumber.startsWith('F')) {\n        return 'First Class';\n      } else if (seatNumber.startsWith('B')) {\n        return 'Business Class';\n      } else if (seatNumber.startsWith('E')) {\n        return 'Economy Class';\n      }\n    }\n    return 'Unknown Class';\n  };\n  const handleAlertClose = () => {\n    setPaymentSuccess(false);\n    if (paymentSuccess) {\n      history.push('/confirmation');\n    }\n  };\n  const cardNumberErrorMessage = cardNumberError ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    style: {\n      color: 'red'\n    },\n    children: cardNumberError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this) : null;\n  const nameErrorMessage = nameError ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    style: {\n      color: 'red'\n    },\n    children: nameError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this) : null;\n  const cvvErrorMessage = cvvError ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    style: {\n      color: 'red'\n    },\n    children: cvvError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this) : null;\n  const expiryErrorMessage = expiryError ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    style: {\n      color: 'red'\n    },\n    children: expiryError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cost Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Ticket Fare (Inclusive of all Taxes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", basePrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Seat Selection Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", seatPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", totalAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body border p-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"collapse show p-3 pt-0\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"form\", {\n                      action: \"\",\n                      className: \"form\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"row\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-12\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"form__div\",\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              className: \"form-control\",\n                              placeholder: \"Card Number\",\n                              value: cardNumber,\n                              onChange: e => {\n                                const inputValue = e.target.value;\n                                const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 16);\n                                const formattedInput = sanitizedInput.replace(/(\\d{4})/g, '$1 ').trim();\n                                setCardNumber(formattedInput);\n                                setCardNumberError('');\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 178,\n                              columnNumber: 31\n                            }, this), cardNumberErrorMessage]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 177,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 176,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-6\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"form__div\",\n                            style: {\n                              display: 'flex'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                flex: 1,\n                                marginRight: '10px'\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"text\",\n                                  className: \"form-control\",\n                                  placeholder: \"MM / YY\",\n                                  value: expiry,\n                                  onChange: e => {\n                                    const inputValue = e.target.value;\n                                    const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 4);\n                                    const formattedInput = sanitizedInput.replace(/(\\d{2})(\\d{0,2})/, '$1/$2');\n                                    const [inputMonth, inputYear] = formattedInput.split('/');\n                                    const isValidMonth = inputMonth >= '01' && inputMonth <= '12';\n                                    const isValidYear = inputYear >= '23' && inputYear <= '28';\n                                    setExpiry(formattedInput);\n                                    setExpiryError(!isValidMonth || !isValidYear ? 'Invalid expiry date (MM / YY)' : '');\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 199,\n                                  columnNumber: 35\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 198,\n                                columnNumber: 33\n                              }, this), expiryErrorMessage]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 197,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                flex: 1\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"text\",\n                                  className: \"form-control\",\n                                  placeholder: \"CVV\",\n                                  value: cvv,\n                                  onChange: e => {\n                                    const inputValue = e.target.value;\n                                    const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 3);\n                                    setCVV(sanitizedInput);\n                                    setCVVError(sanitizedInput.length !== 3 ? 'CVV must be a 3-digit number' : '');\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 225,\n                                  columnNumber: 35\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 224,\n                                columnNumber: 33\n                              }, this), cvvErrorMessage]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 223,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 196,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-12\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"form__div\",\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              className: \"form-control\",\n                              placeholder: \"Firstname Lastname\",\n                              value: name,\n                              onChange: e => {\n                                setName(e.target.value);\n                                setNameError('');\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 249,\n                              columnNumber: 31\n                            }, this), nameErrorMessage]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginBottom: '20px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 263,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-12\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                              alignItems: 'center'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Button, {\n                              style: {\n                                backgroundColor: '#000',\n                                color: '#fff',\n                                flex: 1,\n                                marginRight: '5px'\n                              },\n                              onClick: handlePayment,\n                              children: \"Confirm Payment\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 266,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Button, {\n                              style: {\n                                backgroundColor: '#ccc',\n                                color: '#000',\n                                flex: 1,\n                                marginLeft: '5px'\n                              },\n                              onClick: () => {\n                                setCardNumber('1234 5678 9098 7654');\n                                setExpiry('12/24');\n                                setCVV('123');\n                                setName('Chai');\n                                setCardNumberError('');\n                                setNameError('');\n                                setCVVError('');\n                                setExpiryError('');\n                              },\n                              children: \"Clear Selection\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 272,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 265,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 264,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomAlert, {\n      title: \"Payment Successful\",\n      message: \"Your payment was successful!\",\n      open: paymentSuccess,\n      onClose: handleAlertClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomAlert, {\n      title: \"Payment Failed! Please Retry\",\n      message: \"Your payment was denied please retry or use different card!\",\n      open: paymentError,\n      onClose: handlePayment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(Payment, \"06jPZT8cf2/TiV7v8MRABrI58Cg=\", false, function () {\n  return [useHistory, useUserInfoSession];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useHistory","useLocation","Button","CustomAlert","useUserInfoSession","SeatBookingServices","jsxDEV","_jsxDEV","seatPrice","Math","floor","random","Payment","_s","history","cardNumber","setCardNumber","expiry","setExpiry","cvv","setCVV","name","setName","cardNumberError","setCardNumberError","nameError","setNameError","cvvError","setCVVError","expiryError","setExpiryError","paymentSuccess","setPaymentSuccess","paymentError","setPaymentError","userInfoSession","appendToUserInfoSession","basePrice","amountToBePaid","totalAmount","handlePayment","event","preventDefault","cardNumberPattern","namePattern","cvvPattern","expiryPattern","sanitizedCardNumber","replace","test","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","inputMonth","inputYear","split","getClassFromSeatNumber","seatNumber","startsWith","fetchReservationResponse","reservationResponse","createReservation","selectedFlightNumber","userId","selectedSeat","console","log","bookingId","handleAlertClose","push","cardNumberErrorMessage","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","nameErrorMessage","cvvErrorMessage","expiryErrorMessage","action","type","placeholder","value","onChange","e","inputValue","target","sanitizedInput","substring","formattedInput","trim","display","flex","marginRight","isValidMonth","isValidYear","length","marginBottom","justifyContent","alignItems","backgroundColor","onClick","marginLeft","title","message","open","onClose","_c","$RefreshReg$"],"sources":["/Users/dhruv590/Projects/flight-reservation-system-main/src/modules/booking/payment.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { Button } from \"@material-ui/core\";\nimport CustomAlert from '../../components/custom-alert';\nimport { useUserInfoSession } from \"../../components/header/user-context\";\nimport SeatBookingServices from \"../../services/seat-booking-services\";\n\nimport './payment.css';\n\nconst seatPrice = Math.floor(Math.random() * 101);\n\nfunction Payment() {\n  const history = useHistory();\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [cvv, setCVV] = useState('');\n  const [name, setName] = useState('');\n  const [cardNumberError, setCardNumberError] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [cvvError, setCVVError] = useState('');\n  const [expiryError, setExpiryError] = useState('');\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  const [paymentError, setPaymentError] = useState(false);\n  const { userInfoSession, appendToUserInfoSession } = useUserInfoSession();\n  const basePrice = userInfoSession.amountToBePaid;\n  const totalAmount = basePrice + seatPrice;\n  // const location = useLocation();\n\n  const handlePayment = async (event) => {\n    event.preventDefault();\n\n    const cardNumberPattern = /^\\d{16}$/;\n    const namePattern = /^[A-Za-z\\s]+$/;\n    const cvvPattern = /^\\d{3}$/;\n    const expiryPattern = /^(0[1-9]|1[0-2])\\/\\d{2}$/;\n    const sanitizedCardNumber = cardNumber.replace(/\\s/g, '');\n\n    let cardNumberError = '';\n    if (!cardNumberPattern.test(sanitizedCardNumber)) {\n      cardNumberError = 'Invalid card number';\n    }\n\n    let nameError = '';\n    if (!namePattern.test(name)) {\n      nameError = 'Invalid name';\n    }\n\n    let cvvError = '';\n    if (!cvvPattern.test(cvv)) {\n      cvvError = 'Invalid CVV';\n    }\n\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear() % 100;\n    const currentMonth = currentDate.getMonth() + 1;\n\n    const [inputMonth, inputYear] = expiry.split('/');\n\n    let expiryError = '';\n    if (!expiryPattern.test(expiry)) {\n      expiryError = 'Invalid expiry date (MM/YY)';\n    } else if (inputYear < currentYear || (inputYear === currentYear && inputMonth < currentMonth)) {\n      expiryError = 'Expiry date must be in the future';\n    }\n\n    setCardNumberError(cardNumberError);\n    setNameError(nameError);\n    setCVVError(cvvError);\n    setExpiryError(expiryError);\n\n    if (cardNumberError || nameError || cvvError || expiryError) {\n      setPaymentSuccess(false);\n      return false;\n    }\n\n    const getClassFromSeatNumber = (seatNumber) => {\n      if (seatNumber && seatNumber.startsWith) { // Check if seatNumber is defined and has a startsWith method\n        if (seatNumber.startsWith('F')) {\n          return 'First Class';\n        } else if (seatNumber.startsWith('B')) {\n          return 'Business Class';\n        } else if (seatNumber.startsWith('E')) {\n          return 'Economy Class';\n        }\n      }\n      return 'Unknown Class';\n    };\n\n    const fetchReservationResponse = async () => {\n      const reservationResponse = await SeatBookingServices.createReservation(\n        userInfoSession.selectedFlightNumber, \n        userInfoSession.userId, \n        userInfoSession.selectedSeat, \n        userInfoSession.amountToBePaid\n        );\n        console.log('Seat reservation info from Backend: ', reservationResponse);\n        if (reservationResponse.bookingId) {\n          setPaymentSuccess(true);\n        } else {\n          setPaymentError(true);\n        }\n    }\n    fetchReservationResponse();\n    appendToUserInfoSession({\n      seatPrice: seatPrice,\n    })\n  };\n\n  const getClassFromSeatNumber = (seatNumber) => {\n    if (seatNumber && seatNumber.startsWith) { // Check if seatNumber is defined and has a startsWith method\n      if (seatNumber.startsWith('F')) {\n        return 'First Class';\n      } else if (seatNumber.startsWith('B')) {\n        return 'Business Class';\n      } else if (seatNumber.startsWith('E')) {\n        return 'Economy Class';\n      }\n    }\n    return 'Unknown Class';\n  };\n  \n  const handleAlertClose = () => {\n    setPaymentSuccess(false);\n    if (paymentSuccess) {\n      history.push('/confirmation');\n    }\n  };\n\n  const cardNumberErrorMessage = cardNumberError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{cardNumberError}</div>\n  ) : null;\n  const nameErrorMessage = nameError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{nameError}</div>\n  ) : null;\n  const cvvErrorMessage = cvvError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{cvvError}</div>\n  ) : null;\n  const expiryErrorMessage = expiryError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{expiryError}</div>\n  ) : null;\n\n  return (\n    <div>\n      <div className=\"flight-details-container\">\n        <h2>Cost Breakdown</h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>Ticket Fare (Inclusive of all Taxes)</td>\n              <td>₹{basePrice}</td>\n            </tr>\n            <tr>\n              <td>Seat Selection Price</td>\n              <td>\n                ₹{seatPrice}\n              </td>\n            </tr>\n            <tr>\n              <td>Amount</td>\n              <td>₹{totalAmount}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card p-3\">\n              <div className=\"card-body border p-0\">\n                <div className=\"collapse show p-3 pt-0\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <form action=\"\" className=\"form\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            <div className=\"form__div\">\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Card Number\"\n                                value={cardNumber}\n                                onChange={(e) => {\n                                  const inputValue = e.target.value;\n                                  const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 16);\n                                  const formattedInput = sanitizedInput.replace(/(\\d{4})/g, '$1 ').trim();\n                                  setCardNumber(formattedInput);\n                                  setCardNumberError('');\n                                }}\n                              />\n                              {cardNumberErrorMessage}\n                            </div>\n                          </div>\n\n                          <div className=\"col-6\">\n                            <div className=\"form__div\" style={{ display: 'flex' }}>\n                              <div style={{ flex: 1, marginRight: '10px' }}>\n                                <div>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"MM / YY\"\n                                    value={expiry}\n                                    onChange={(e) => {\n                                      const inputValue = e.target.value;\n                                      const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 4);\n                                      const formattedInput = sanitizedInput.replace(/(\\d{2})(\\d{0,2})/, '$1/$2');\n                                      const [inputMonth, inputYear] = formattedInput.split('/');\n                                      const isValidMonth = inputMonth >= '01' && inputMonth <= '12';\n                                      const isValidYear = inputYear >= '23' && inputYear <= '28';\n                                      setExpiry(formattedInput);\n                                      setExpiryError(\n                                        !isValidMonth || !isValidYear\n                                          ? 'Invalid expiry date (MM / YY)'\n                                          : ''\n                                      );\n                                    }}\n                                  />\n                                </div>\n                                {expiryErrorMessage}\n                              </div>\n\n                              <div style={{ flex: 1 }}>\n                                <div>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"CVV\"\n                                    value={cvv}\n                                    onChange={(e) => {\n                                      const inputValue = e.target.value;\n                                      const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 3);\n                                      setCVV(sanitizedInput);\n                                      setCVVError(\n                                        sanitizedInput.length !== 3\n                                          ? 'CVV must be a 3-digit number'\n                                          : ''\n                                      );\n                                    }}\n                                  />\n                                </div>\n                                {cvvErrorMessage}\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-12\">\n                            <div className=\"form__div\">\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Firstname Lastname\"\n                                value={name}\n                                onChange={(e) => {\n                                  setName(e.target.value);\n                                  setNameError('');\n                                }}\n                              />\n                              {nameErrorMessage}\n                            </div>\n                          </div>\n\n                          <div style={{ marginBottom: '20px' }}></div>\n                          <div className=\"col-12\">\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                              <Button\n                                style={{ backgroundColor: '#000', color: '#fff', flex: 1, marginRight: '5px' }}\n                                onClick={handlePayment}\n                              >\n                                Confirm Payment\n                              </Button>\n                              <Button\n                                style={{ backgroundColor: '#ccc', color: '#000', flex: 1, marginLeft: '5px' }}\n                                onClick={() => {\n                                  setCardNumber('1234 5678 9098 7654');\n                                  setExpiry('12/24');\n                                  setCVV('123');\n                                  setName('Chai');\n                                  setCardNumberError('');\n                                  setNameError('');\n                                  setCVVError('');\n                                  setExpiryError('');\n                                }}\n                              >\n                                Clear Selection\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <CustomAlert\n        title=\"Payment Successful\"\n        message=\"Your payment was successful!\"\n        open={paymentSuccess}\n        onClose={handleAlertClose}\n      />\n        <CustomAlert\n        title=\"Payment Failed! Please Retry\"\n        message=\"Your payment was denied please retry or use different card!\"\n        open={paymentError}\n        onClose={handlePayment}\n      />\n    </div>\n  );\n}\n\nexport default Payment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}