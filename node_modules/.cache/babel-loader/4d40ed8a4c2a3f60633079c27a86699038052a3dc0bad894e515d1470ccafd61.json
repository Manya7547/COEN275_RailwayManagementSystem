{"ast":null,"code":"/**\r\n * @function validateSearch\r\n * @param {string} source\r\n * @param {string} dest\r\n * @param {string} deptDate\r\n * @param {string} returnDate\r\n * @param {string} selectTrip\r\n * @description validate search criteria\r\n */\nconst validateSearch = (source, dest, deptDate, returnDate, selectTrip) => {\n  let flag = true;\n  if ((selectTrip === null || selectTrip === void 0 ? void 0 : selectTrip.toUpperCase()) === \"ONE\") {\n    flag = (source === null || source === void 0 ? void 0 : source.length) === 0 || (dest === null || dest === void 0 ? void 0 : dest.length) === 0 || (deptDate === null || deptDate === void 0 ? void 0 : deptDate.length) === 0;\n  } else {\n    flag = (source === null || source === void 0 ? void 0 : source.length) === 0 || (dest === null || dest === void 0 ? void 0 : dest.length) === 0 || (deptDate === null || deptDate === void 0 ? void 0 : deptDate.length) === 0 || (returnDate === null || returnDate === void 0 ? void 0 : returnDate.length) === 0;\n  }\n  return flag;\n};\n\n/**\r\n * @function thousandSeparator\r\n * @param {int} x\r\n * @description Thosand Separator\r\n */\nconst thousandSeparator = x => {\n  return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\n/**\r\n * @function filterBySourceDest\r\n * @param {object} payload\r\n * @param {array} response\r\n * @description filter flight list by source and destination\r\n */\nconst filterBySourceDest = (payload, response) => {\n  let resultArr = [];\n  let tempArr = [...response];\n  const sourceCity = payload === null || payload === void 0 ? void 0 : payload.source;\n  const destCity = payload === null || payload === void 0 ? void 0 : payload.destination;\n  resultArr = tempArr.filter(val => {\n    var _val$departure, _val$arrival;\n    return (val === null || val === void 0 ? void 0 : (_val$departure = val.departure) === null || _val$departure === void 0 ? void 0 : _val$departure.toLowerCase()) === (sourceCity === null || sourceCity === void 0 ? void 0 : sourceCity.toLowerCase()) && (val === null || val === void 0 ? void 0 : (_val$arrival = val.arrival) === null || _val$arrival === void 0 ? void 0 : _val$arrival.toLowerCase()) === (destCity === null || destCity === void 0 ? void 0 : destCity.toLowerCase());\n  });\n  return resultArr;\n};\nexport { validateSearch, thousandSeparator, filterBySourceDest };","map":{"version":3,"names":["validateSearch","source","dest","deptDate","returnDate","selectTrip","flag","toUpperCase","length","thousandSeparator","x","toString","replace","filterBySourceDest","payload","response","resultArr","tempArr","sourceCity","destCity","destination","filter","val","_val$departure","_val$arrival","departure","toLowerCase","arrival"],"sources":["/Users/dhruv590/Projects/flight-reservation-system-main/src/services/global-services.js"],"sourcesContent":["/**\r\n * @function validateSearch\r\n * @param {string} source\r\n * @param {string} dest\r\n * @param {string} deptDate\r\n * @param {string} returnDate\r\n * @param {string} selectTrip\r\n * @description validate search criteria\r\n */\r\nconst validateSearch = (source, dest, deptDate, returnDate, selectTrip) => {\r\n  let flag = true;\r\n\r\n  if (selectTrip?.toUpperCase() === \"ONE\") {\r\n    flag = source?.length === 0 || dest?.length === 0 || deptDate?.length === 0;\r\n  } else {\r\n    flag =\r\n      source?.length === 0 ||\r\n      dest?.length === 0 ||\r\n      deptDate?.length === 0 ||\r\n      returnDate?.length === 0;\r\n  }\r\n\r\n  return flag;\r\n};\r\n\r\n/**\r\n * @function thousandSeparator\r\n * @param {int} x\r\n * @description Thosand Separator\r\n */\r\nconst thousandSeparator = (x) => {\r\n  return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\n/**\r\n * @function filterBySourceDest\r\n * @param {object} payload\r\n * @param {array} response\r\n * @description filter flight list by source and destination\r\n */\r\nconst filterBySourceDest = (payload, response) => {\r\n  let resultArr = [];\r\n\r\n  let tempArr = [...response];\r\n  const sourceCity = payload?.source;\r\n  const destCity = payload?.destination;\r\n\r\n  resultArr = tempArr.filter(\r\n    (val) =>\r\n      val?.departure?.toLowerCase() === sourceCity?.toLowerCase() &&\r\n      val?.arrival?.toLowerCase() === destCity?.toLowerCase()\r\n  );\r\n\r\n  return resultArr;\r\n};\r\n\r\nexport { validateSearch, thousandSeparator, filterBySourceDest };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,cAAc,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,KAAK;EACzE,IAAIC,IAAI,GAAG,IAAI;EAEf,IAAI,CAAAD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,WAAW,CAAC,CAAC,MAAK,KAAK,EAAE;IACvCD,IAAI,GAAG,CAAAL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,MAAM,MAAK,CAAC,IAAI,CAAAN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,MAAM,MAAK,CAAC,IAAI,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,MAAM,MAAK,CAAC;EAC7E,CAAC,MAAM;IACLF,IAAI,GACF,CAAAL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,MAAM,MAAK,CAAC,IACpB,CAAAN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,MAAM,MAAK,CAAC,IAClB,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,MAAM,MAAK,CAAC,IACtB,CAAAJ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEI,MAAM,MAAK,CAAC;EAC5B;EAEA,OAAOF,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;EAC/B,OAAOA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,iCAAiC,EAAE,GAAG,CAAC;AACrE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;EAChD,IAAIC,SAAS,GAAG,EAAE;EAElB,IAAIC,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAAC;EAC3B,MAAMG,UAAU,GAAGJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEb,MAAM;EAClC,MAAMkB,QAAQ,GAAGL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,WAAW;EAErCJ,SAAS,GAAGC,OAAO,CAACI,MAAM,CACvBC,GAAG;IAAA,IAAAC,cAAA,EAAAC,YAAA;IAAA,OACF,CAAAF,GAAG,aAAHA,GAAG,wBAAAC,cAAA,GAAHD,GAAG,CAAEG,SAAS,cAAAF,cAAA,uBAAdA,cAAA,CAAgBG,WAAW,CAAC,CAAC,OAAKR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEQ,WAAW,CAAC,CAAC,KAC3D,CAAAJ,GAAG,aAAHA,GAAG,wBAAAE,YAAA,GAAHF,GAAG,CAAEK,OAAO,cAAAH,YAAA,uBAAZA,YAAA,CAAcE,WAAW,CAAC,CAAC,OAAKP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEO,WAAW,CAAC,CAAC;EAAA,CAC3D,CAAC;EAED,OAAOV,SAAS;AAClB,CAAC;AAED,SAAShB,cAAc,EAAES,iBAAiB,EAAEI,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}