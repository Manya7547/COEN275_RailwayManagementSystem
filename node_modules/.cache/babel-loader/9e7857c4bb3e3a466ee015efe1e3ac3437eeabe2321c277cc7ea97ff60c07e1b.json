{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport actions from \"../../constants/actions\";\nimport { filterBySourceDest } from \"../../services/global-services\";\nimport { get } from \"../../utils/xhr\";\nimport FlightJSON from \"../../mocks/flights-one-way-mumbai.json\";\nexport function* fetFlightList(payload) {\n  // put API URL here\n  const url = \"http://localhost:8080/booking/getFlightsOnArrivalAndDeparture/\" + payload.source + \"/\" + payload.destination + \"/\" + payload.deptDate;\n  const jsonResponse = [...FlightJSON];\n  try {\n    let response;\n    response = yield call(get, url);\n    if (!response) {\n      response = filterBySourceDest(payload, jsonResponse);\n    }\n    yield put({\n      type: actions.GET_FLIGHT_LIST_SUCCESS,\n      result: response,\n      error: null\n    });\n  } catch (error) {\n    const errorObj = JSON.parse(error.message);\n    yield put({\n      type: actions.GET_FLIGHT_LIST_ERROR,\n      result: null,\n      error: {\n        statusCode: errorObj.statusCode,\n        message: errorObj.errorMessage\n      }\n    });\n  }\n}","map":{"version":3,"names":["put","call","actions","filterBySourceDest","get","FlightJSON","fetFlightList","payload","url","source","destination","deptDate","jsonResponse","response","type","GET_FLIGHT_LIST_SUCCESS","result","error","errorObj","JSON","parse","message","GET_FLIGHT_LIST_ERROR","statusCode","errorMessage"],"sources":["/Users/dhruv590/Projects/flight-reservation-system-main/src/modules/search/worker.js"],"sourcesContent":["import {put, call} from \"redux-saga/effects\";\r\n\r\nimport actions from \"../../constants/actions\";\r\nimport {filterBySourceDest} from \"../../services/global-services\";\r\nimport {get} from \"../../utils/xhr\";\r\n\r\nimport FlightJSON from \"../../mocks/flights-one-way-mumbai.json\";\r\n\r\nexport function* fetFlightList(payload) {\r\n    // put API URL here\r\n    const url = \"http://localhost:8080/booking/getFlightsOnArrivalAndDeparture/\" +\r\n        payload.source + \"/\" + payload.destination + \"/\" + payload.deptDate;\r\n\r\n    const jsonResponse = [...FlightJSON];\r\n    try {\r\n        let response;\r\n        response = yield call(get, url);\r\n        if (!response) {\r\n            response = filterBySourceDest(payload, jsonResponse);\r\n        }\r\n\r\n        yield put({\r\n            type: actions.GET_FLIGHT_LIST_SUCCESS,\r\n            result: response,\r\n            error: null\r\n        });\r\n    } catch (error) {\r\n        const errorObj = JSON.parse(error.message);\r\n\r\n        yield put({\r\n            type: actions.GET_FLIGHT_LIST_ERROR,\r\n            result: null,\r\n            error: {\r\n                statusCode: errorObj.statusCode,\r\n                message: errorObj.errorMessage\r\n            }\r\n        });\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAAQA,GAAG,EAAEC,IAAI,QAAO,oBAAoB;AAE5C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAAQC,kBAAkB,QAAO,gCAAgC;AACjE,SAAQC,GAAG,QAAO,iBAAiB;AAEnC,OAAOC,UAAU,MAAM,yCAAyC;AAEhE,OAAO,UAAUC,aAAaA,CAACC,OAAO,EAAE;EACpC;EACA,MAAMC,GAAG,GAAG,gEAAgE,GACxED,OAAO,CAACE,MAAM,GAAG,GAAG,GAAGF,OAAO,CAACG,WAAW,GAAG,GAAG,GAAGH,OAAO,CAACI,QAAQ;EAEvE,MAAMC,YAAY,GAAG,CAAC,GAAGP,UAAU,CAAC;EACpC,IAAI;IACA,IAAIQ,QAAQ;IACZA,QAAQ,GAAG,MAAMZ,IAAI,CAACG,GAAG,EAAEI,GAAG,CAAC;IAC/B,IAAI,CAACK,QAAQ,EAAE;MACXA,QAAQ,GAAGV,kBAAkB,CAACI,OAAO,EAAEK,YAAY,CAAC;IACxD;IAEA,MAAMZ,GAAG,CAAC;MACNc,IAAI,EAAEZ,OAAO,CAACa,uBAAuB;MACrCC,MAAM,EAAEH,QAAQ;MAChBI,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZ,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC;IAE1C,MAAMrB,GAAG,CAAC;MACNc,IAAI,EAAEZ,OAAO,CAACoB,qBAAqB;MACnCN,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;QACHM,UAAU,EAAEL,QAAQ,CAACK,UAAU;QAC/BF,OAAO,EAAEH,QAAQ,CAACM;MACtB;IACJ,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}