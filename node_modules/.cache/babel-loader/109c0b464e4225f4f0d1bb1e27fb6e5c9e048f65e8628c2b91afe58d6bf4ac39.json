{"ast":null,"code":"import { LOCAL_BACKEND_BASE_URL } from \"../constants\";\nimport axios from 'axios';\nexport default class SeatBookingServices {}\nSeatBookingServices.getAllSeats = flightNumber => {\n  const getAllSeatsURL = LOCAL_BACKEND_BASE_URL + 'booking/getAllSeats/' + flightNumber;\n  return axios.get(getAllSeatsURL).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(\"Error in Backend call, sending back empty seats\", error);\n    return [];\n  });\n};\nSeatBookingServices.bookSeats = (flightNumber, userId, seatNumber, seatClass, price) => {\n  const bookSeatsURL = LOCAL_BACKEND_BASE_URL + 'booking/bookSeats/' + flightNumber + '/' + userId;\n  const bookSeatsRequest = {\n    seatNumber: seatNumber,\n    seatClass: seatClass,\n    price: price,\n    booked: false\n  };\n  return axios.post(bookSeatsURL, bookSeatsRequest).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(\"Error in Backend call, sending back empty booking\", error);\n    return null;\n  });\n};\nSeatBookingServices.createReservation = (flightNumber, userId, seatNumber, price) => {\n  const createReservationURL = LOCAL_BACKEND_BASE_URL + 'payment/createReservation/' + flightNumber + '/' + userId + '/' + seatNumber;\n  const createReservation = {\n    totalTravelFair: price\n  };\n  return axios.post(createReservationURL, createReservation).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(\"Error in Backend call, sending back empty reservation\", error);\n    return null;\n  });\n};\nSeatBookingServices.selectFlight = (userId, flightNumber, departure, arrival, departureDate, departureTime, arrivalDate, arrivalTime) => {\n  const selectFlightURL = LOCAL_BACKEND_BASE_URL + 'booking/bookFlights/' + userId;\n  const selectFlightRequest = {\n    flightNumber: flightNumber,\n    departure: departure,\n    arrival: arrival,\n    departureDate: departureDate,\n    departureTime: departureTime,\n    arrivalDate: arrivalDate,\n    arrivalTime: arrivalTime,\n    seatAvailability: 30\n  };\n  return axios.post(selectFlightURL, selectFlightRequest).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(\"Error in Backend call, sending back empty select flight\", error);\n    return null;\n  });\n};","map":{"version":3,"names":["LOCAL_BACKEND_BASE_URL","axios","SeatBookingServices","getAllSeats","flightNumber","getAllSeatsURL","get","then","response","data","catch","error","console","log","bookSeats","userId","seatNumber","seatClass","price","bookSeatsURL","bookSeatsRequest","booked","post","createReservation","createReservationURL","totalTravelFair","selectFlight","departure","arrival","departureDate","departureTime","arrivalDate","arrivalTime","selectFlightURL","selectFlightRequest","seatAvailability"],"sources":["/Users/dhruv590/Projects/flight-reservation-system-main/src/services/seat-booking-services.js"],"sourcesContent":["import {LOCAL_BACKEND_BASE_URL} from \"../constants\";\nimport axios from 'axios';\n\nexport default class SeatBookingServices {\n    static getAllSeats = (flightNumber) => {\n        const getAllSeatsURL = LOCAL_BACKEND_BASE_URL + 'booking/getAllSeats/' + flightNumber;\n        return axios.get(getAllSeatsURL)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty seats\", error);\n                return []\n            })\n    }\n\n    static bookSeats = (flightNumber, userId, seatNumber, seatClass, price) => {\n        const bookSeatsURL = LOCAL_BACKEND_BASE_URL + 'booking/bookSeats/' + flightNumber + '/' + userId;\n        const bookSeatsRequest = {\n            seatNumber: seatNumber,\n            seatClass: seatClass,\n            price: price,\n            booked: false\n        }\n\n        return axios.post(bookSeatsURL, bookSeatsRequest)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty booking\", error);\n                return null;\n            })\n    }\n\n    static createReservation = (flightNumber, userId, seatNumber, price) => {\n        const createReservationURL = LOCAL_BACKEND_BASE_URL + 'payment/createReservation/' + flightNumber + '/' + userId + '/' + seatNumber;\n        const createReservation = {\n            totalTravelFair: price\n        }\n\n        return axios.post(createReservationURL, createReservation)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty reservation\", error);\n                return null;\n            })\n    }\n\n    static selectFlight = (userId, flightNumber, departure, arrival, departureDate, departureTime, arrivalDate, arrivalTime) => {\n        const selectFlightURL = LOCAL_BACKEND_BASE_URL + 'booking/bookFlights/' + userId;\n        const selectFlightRequest = {\n            flightNumber: flightNumber,\n            departure: departure,\n            arrival: arrival,\n            departureDate: departureDate,\n            departureTime: departureTime,\n            arrivalDate: arrivalDate,\n            arrivalTime: arrivalTime,\n            seatAvailability: 30\n        }\n\n        return axios.post(selectFlightURL, selectFlightRequest)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty select flight\", error);\n                return null;\n            })\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}